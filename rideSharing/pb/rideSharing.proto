syntax = "proto3";

package rideSharing;

service rideSharing{
	
	rpc Connect(UserRequest) returns (UserResponse){}
	rpc SendPresence(UserRequest) returns (UserResponse){}
	rpc SendRequest(RequestUser) returns (RequestResponse){}
	//rpc GetRequestStatus(RequestFilter) returns (RequestUser){}
	rpc AcceptRequest(AcceptUser) returns (AcceptResponse){}
	rpc SendLocation(RequestLocation) returns (ResponseLocation){}
	rpc startTrip(RequestStartTrip) returns (ResponseTrip){}
	rpc endTrip(RequestEndTrip) returns (ResponseTrip){}
}

message RequestStartTrip{
	string From = 1;
	string To = 2;
}

message RequestEndTrip{
	string From = 1;
	string To = 2;
	int32 Distance = 3;
}


message ResponseTrip{
	string From = 1;
	bool success = 2;
}


message RequestLocation{
	string From = 1;
	string To = 2;
	float Lat = 3;
	float Lon = 4;
}

message ResponseLocation{
	string From = 1;
	bool success = 2;
}


message UserRequest{
	string UserName = 1;
}

message UserResponse{
	string UserName = 1;
}

message RequestUser{
	string From = 1;
	float Lat = 2;
	float Lon = 3;
	string status = 4;
}

message RequestResponse{
	string From = 1;
	bool success = 2;
}

message RequestFilter{
  string UserKey = 1;
}


message AcceptUser{
	string From = 1;
	string To = 2;
	float Lat = 3;
	float Lon = 4;
}

message AcceptResponse{
	string From = 1;
	bool success = 2;
}